#------------------------------------------------------------------------------
# Tmux config by Bams (c) 2022
#------------------------------------------------------------------------------

# Solve vim background color issues
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",*256color:Tc"

#-- visual annoyance off ------------------------------------------------------
set -g visual-bell      off
set -g visual-silence   off
set -g bell-action      none

#-- settings ------------------------------------------------------------------
set -g display-time 10000      # Messages and indicators timeout
set -g base-index 1            # Windows counts from 1
set -g pane-base-index 1       # Panes counts from 1
set -g renumber-windows on     # Automatically renumber windows on new/delete
set -g history-limit 1000      # Set the maximum number of lines held in window history
set -g escape-time 0           # Set the time in milliseconds for which tmux waits after an
                               # escape is input to determine if it is part of a function or
                               # meta key sequences.  The default is 500 milliseconds ???? WTF ????
set -g repeat-time 600         # Increase repeat timeout
set -g display-panes-time 3000 # Visible indicator of each pane timeout

#-- window --------------------------------------------------------------------
set -g allow-rename     off # Allow programs in the pane to change the window name
set -g automatic-rename off # When this setting is enabled, tmux will rename the window automatically
set -g monitor-activity off # Windows with activity are highlighted in the status line
set -g visual-activity  off # Display a message instead of sending a bell

#-- mouse ---------------------------------------------------------------------
set -g mouse on             # Enable mouse support

#-- key bindings --------------------------------------------------------------
unbind -a                   # Remove all default bindings

set -g prefix C-Space       # Prefix key
bind C-Space send-prefix    # Send prefix for nested sessions

# Reload tmux configuration
bind R source-file $HOME/.config/tmux/tmux.conf \; display-message "Config reloaded"

#------------------------------------------------------------------------------
bind x switch-client -T KILL \; display-message "KILL: x-pane, X-other panes, w-window, W-other windows, s-session, S-server, d-detach"

bind -T KILL x confirm-before -p "Kill pane #P? (y/n)"               "kill-pane"
bind -T KILL X confirm-before -p "Kill other panes except #P? (y/n)" "kill-pane -a"
bind -T KILL w confirm-before -p "Kill window #W? (y/n)"             "kill-window"
bind -T KILL W confirm-before -p "Kill other windows? (y/n)"         "kill-window -a"
bind -T KILL s confirm-before -p "Kill session #S? (y/n)"            "kill-session"
bind -T KILL S confirm-before -p "Kill server? (y/n)"                "kill-server"
bind -T KILL d confirm-before -p "Detach client (y/n)"               "detach-client"

#------------------------------------------------------------------------------
bind r switch-client -T RENAME \; display-message "RENAME: w-window, s-session"

bind -T RENAME w command-prompt -I "#{window_name}"  "rename-window '%%'"
bind -T RENAME s command-prompt -I "#{session_name}" "rename-session '%%'"

#------------------------------------------------------------------------------
bind w switch-client -T SPLIT \; display-message "SPLIT: s-split CWD, v-verically CWD"

bind -T SPLIT s split-window -v -c "#{pane_current_path}"
bind -T SPLIT v split-window -h -c "#{pane_current_path}"

#------------------------------------------------------------------------------
bind n switch-client -T NEW \; display-message "NEW: s-session, w-cwd window, W-window"

bind -T NEW S new-session -c "#{pane_current_path}"

bind -T NEW w new-window -c "#{pane_current_path}"
bind -T NEW W new-window

#------------------------------------------------------------------------------
bind t switch-client -T TOGGLE \; display-message "TOGGLE: s-status"

bind -T TOGGLE s if -F "#{s/off//:status}" "set status off" "set status on"

#------------------------------------------------------------------------------
bind c switch-client -T CHOICE \; display-message "CHOICE: t-tree, s-session, w-window, c-client, b-buffer"

bind -T CHOICE t choose-tree
bind -T CHOICE s choose-session
bind -T CHOICE w choose-window
bind -T CHOICE c choose-client
bind -T CHOICE b choose-buffer

#------------------------------------------------------------------------------
bind : command-prompt

bind z resize-pane -Z # Zoom pane

# pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n "M-h" if-shell "$is_vim" "send-keys M-h" { if -F "#{pane_at_left}"   "" "select-pane -L" }
bind -n "M-j" if-shell "$is_vim" "send-keys M-j" { if -F "#{pane_at_bottom}" "" "select-pane -D" }
bind -n "M-k" if-shell "$is_vim" "send-keys M-k" { if -F "#{pane_at_top}"    "" "select-pane -U" }
bind -n "M-l" if-shell "$is_vim" "send-keys M-l" { if -F "#{pane_at_right}"  "" "select-pane -R" }

# pane sizing
bind -n "M-H" if-shell "$is_vim" "send-keys M-H" "resize-pane -L 1"
bind -n "M-J" if-shell "$is_vim" "send-keys M-J" "resize-pane -D 1"
bind -n "M-K" if-shell "$is_vim" "send-keys M-K" "resize-pane -U 1"
bind -n "M-L" if-shell "$is_vim" "send-keys M-L" "resize-pane -R 1"

bind p display-panes
bind m select-pane -m
bind M swap-pane -t

bind enter next-layout

# window navigation
bind -r Tab last-window   # cycle thru MRU tabs
bind -n "M-1" select-window -t 1
bind -n "M-2" select-window -t 2
bind -n "M-3" select-window -t 3
bind -n "M-4" select-window -t 4
bind -n "M-5" select-window -t 5
bind -n "M-6" select-window -t 6
bind -n "M-7" select-window -t 7
bind -n "M-8" select-window -t 8
bind -n "M-9" select-window -t 9
bind -n "M-0" select-window -t 10

